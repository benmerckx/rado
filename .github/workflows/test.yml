name: ci

on:
  push:
    branches: [main, v1]
    tags: [v*]
  pull_request:
    branches: [main]

env:
  CI: true
  FORCE_COLOR: true

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: mysql
          MYSQL_ROOT_PASSWORD: mysql
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - run: bun install --frozen-lockfile
      - run: bun tsc
      - run: bun cycles
      - run: bun test:bun
      - run: bun test:node
      - run: bun test:deno
      - run: bunx jsr publish --config jsr.json --dry-run
      - if: startsWith(github.ref, 'refs/tags/v')
        run: |
          npm config set //registry.npmjs.org/:_authToken ${{secrets.NPM_AUTH_TOKEN}}
          npm publish
      - if: startsWith(github.ref, 'refs/tags/v')
        run: bunx jsr publish --config jsr.json
